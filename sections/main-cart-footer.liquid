{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }

  .cart__check {   
  display: none;       
  background-color: #fff8e1;   
  padding: 12px;
  border-radius: 4px;
  margin-bottom: 15px;
  border: 1px solid #ffd54f;
  }

  .cart__check.is-active { 
  display: block;
  }
{%- endstyle -%}

<div
  class="gradient color-{{ section.settings.color_scheme }}{% if cart == empty %} is-empty{% endif %}"
  id="main-cart-footer"
  data-id="{{ section.id }}"
>
  <div class="page-width">
    <div class="cart__footer isolate section-{{ section.id }}-padding">
      {%- if settings.show_cart_note -%}
        <cart-note class="cart__note field">
          <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
          <textarea
            class="text-area field__input"
            name="note"
            form="cart"
            id="Cart-note"
            placeholder="{{ 'sections.cart.note' | t }}"
          >{{ cart.note }}</textarea>
        </cart-note>
      {%- endif -%}

      <div class="cart__blocks">
        {% for block in section.blocks %}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}
            {%- when 'subtotal' -%}
              <div class="js-contents" {{ block.shopify_attributes }}>
                <div>
                  {%- if cart.cart_level_discount_applications.size > 0 -%}
                    <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                      {%- for discount in cart.cart_level_discount_applications -%}
                        <li class="discounts__discount discounts__discount--position">
                          {%- render 'icon-discount' -%}
                          {{ discount.title | escape }}
                          (-{{ discount.total_allocated_amount | money }})
                        </li>
                      {%- endfor -%}
                    </ul>
                  {%- endif -%}
                </div>

                <div id="free-shipping-message"></div>

                <div class="totals">
                  <h2 class="totals__total">{{ 'sections.cart.estimated_total' | t }}</h2>
                  <p class="totals__total-value">{{ cart.total_price | money_with_currency }}</p>
                </div>

                <small class="tax-note caption-large rte">
                  {%- if cart.duties_included and cart.taxes_included -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.duties_and_taxes_included_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.duties_and_taxes_included_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- elsif cart.duties_included == false and cart.taxes_included -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.taxes_included_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.taxes_included_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- elsif cart.duties_included and cart.taxes_included == false -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.duties_included_taxes_at_checkout_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.duties_included_taxes_at_checkout_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- elsif cart.duties_included == false and cart.taxes_included == false -%}
                    {%- if shop.shipping_policy.body == blank -%}
                      {{ 'sections.cart.taxes_at_checkout_shipping_at_checkout_without_policy' | t }}
                    {%- else -%}
                      {{
                        'sections.cart.taxes_at_checkout_shipping_at_checkout_with_policy_html'
                        | t: link: shop.shipping_policy.url
                      }}
                    {%- endif -%}
                  {%- endif -%}
                </small>
              </div>
            {%- else -%}
            <div class="cart__check">
              <input type="checkbox" id="cart_check">
              <label for="cart_check">特定の商品が含まれていますが、お間違いありませんか？</label>
            </div>
              <div class="cart__ctas" {{ block.shopify_attributes }}>
                <button
                  type="submit"
                  id="checkout"
                  class="cart__checkout-button button"
                  name="checkout"
                  {% if cart == empty %}
                    disabled
                  {% endif %}
                  form="cart"
                >
                  {{ 'sections.cart.checkout' | t }}
                </button>
              </div>

              {%- if additional_checkout_buttons -%}
                <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                </div>
              {%- endif -%}
          {%- endcase -%}
        {% endfor %}

        <div id="cart-errors"></div>
      </div>
    </div>
  </div>
</div>

{% schema %}
{
  "name": "t:sections.main-cart-footer.name",
  "class": "cart__footer-wrapper",
  "settings": [
    {
      "type": "color_scheme",
      "id": "color_scheme",
      "label": "t:sections.all.colors.label",
      "default": "scheme-1"
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ]
}
{% endschema %}

<script>
  function updateFreeShippingMessage() {
    const FREE_SHIPPING = 30000; // 送料無料ライン（円）
    fetch('/cart.js')
      .then(r => r.json())
      .then(cart => {
        const cartTotal = (cart.total_price || 0) / 100;
        const amountLeft = FREE_SHIPPING - cartTotal;
        const el = document.getElementById('free-shipping-message');
        if (!el) return;
        el.textContent = amountLeft > 0
          ? `あと${amountLeft.toLocaleString()}円で送料無料！`
          : '送料無料です！';
      })
      .catch(() => {});
  }

  function updateSpecialTypeCheck() {
    const SPECIAL_PRODUCT_TYPES = {
      '酒類': '※酒類が含まれています。20歳以上であることをご確認ください。',
      '医薬品': '※医薬品が含まれています。使用上の注意をご確認ください。'
    };

    const cartCheckDiv   = document.querySelector('.cart__check');
    const cartCheckInput = document.getElementById('cart_check');
    const cartCheckLabel = cartCheckDiv ? cartCheckDiv.querySelector('label') : null;
    const checkoutBtn    = document.getElementById('checkout');

    if (!cartCheckDiv || !cartCheckInput || !cartCheckLabel || !checkoutBtn) return;

    fetch('/cart.js')
      .then(r => r.json())
      .then(cart => {
        const foundProductTypes = new Set();
        for (const item of cart.items || []) {
          const type = item.product_type || '';
          if (SPECIAL_PRODUCT_TYPES[type]) foundProductTypes.add(type);
        }

        if (foundProductTypes.size > 0) {
          const messages = Array.from(foundProductTypes).map(t => SPECIAL_PRODUCT_TYPES[t]);
          cartCheckLabel.innerHTML =
            `以下の商品が含まれていますが、お間違いありませんか？<br>${messages.join('<br>')}`;

          cartCheckDiv.classList.add('is-active');
          if (!cartCheckInput.checked) checkoutBtn.disabled = true;

          // 毎回監視で呼ばれても問題ないように、イベントを付け直し
          cartCheckInput.onchange = () => {
            checkoutBtn.disabled = !cartCheckInput.checked;
          };
        } else {
          cartCheckDiv.classList.remove('is-active');
          cartCheckInput.checked = false;
          checkoutBtn.disabled = false;
          cartCheckInput.onchange = null;
        }
      })
      .catch(() => {});
  }

  // 初回実行
  updateFreeShippingMessage();
  updateSpecialTypeCheck();

  // Ajaxカート等でDOMが差し替わっても再実行
  const cartFooter = document.getElementById('main-cart-footer');
  if (cartFooter) {
    const observer = new MutationObserver(() => {
      updateFreeShippingMessage();
      updateSpecialTypeCheck();
    });
    observer.observe(cartFooter, { childList: true, subtree: true });
  }
</script>

